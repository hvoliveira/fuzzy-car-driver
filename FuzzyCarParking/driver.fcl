/* Car fuzzy parker v 1.0 */

FUNCTION_BLOCK driver

	VAR_INPUT
	
		position    : REAL;
		orientation : REAL;
		
	END_VAR
	
	VAR_OUTPUT
	
		wheelOrientation : REAL;
		
	END_VAR
	
//	FUZZIFY position
//	
//		TERM LE := (-700, 1) (-560, 1) (-210, 0);
//		TERM LC := (-300, 0) (-140, 1) (0, 0);
//		TERM CE := (-100, 0) (0, 1) (100, 0);
//		TERM RC := (0, 0) (160, 1) (300, 0);
//		TERM RI := (210, 0) (560, 1) (700, 1);
//	
//	END_FUZZIFY
	
	FUZZIFY position
	
		TERM LE := (-100, 1) (-80, 1) (-30, 0);
		TERM LC := (-40, 0) (-20, 1) (4, 0);
		TERM CE := (-10, 0) (0, 1) (10, 0);
		TERM RC := (-4, 0) (20, 1) (40, 0);
		TERM RI := (30, 0) (80, 1) (100, 1);
	
	END_FUZZIFY
	
	FUZZIFY orientation
	
		TERM RB := (-100, 0)(-45, 1)(10, 0);
		TERM RU := (-10, 0)(22.5, 1)(55, 0);
		TERM RV := (45, 0)(67.5, 1)(93, 0);
		TERM VE := (80, 0)(90, 1)(100, 0);
		TERM LV := (87, 0)(115, 1)(140, 0);
		TERM LU := (130, 0)(155, 1)(190, 0);
		TERM LB := (170, 0)(225, 1)(280, 0);
	
	END_FUZZIFY
	
	DEFUZZIFY wheelOrientation
	
		TERM NB:= (-30, 1) (-15, 0);
		TERM NM:= (-25, 0) (-15, 1) (-3, 0);
		TERM NS:= (-12, 0) (-5, 1) (2, 0);
		TERM ZE:= (-6, 0)(0, 1)(6, 0);
		TERM PS:= (-2, 0) (5, 1) (12, 0);
		TERM PM:= (3, 0) (15, 1) (25, 0);
		TERM PB:= (15, 0) (30, 1);
		METHOD  : COG; // defuzzification method
		DEFAULT := 0; // 	default value (if no rule activates defuzzifier)
	
	END_DEFUZZIFY
	
	RULEBLOCK No1
		
		AND  : MIN; // USE MIN FOR AND
		ACT  : MIN; // USE MIN FOR ACTIVATION METHOD
		ACCU : MAX; // USE MAX ACCUMULATION METHOD
		
		RULE 1  : IF orientation IS RB AND position IS LE THEN wheelOrientation IS PS;
		RULE 2  : IF orientation IS RB AND position IS LC THEN wheelOrientation IS PM;
		RULE 3  : IF orientation IS RB AND position IS CE THEN wheelOrientation IS PM;
		RULE 4  : IF orientation IS RB AND position IS RC THEN wheelOrientation IS PB;
		RULE 5  : IF orientation IS RB AND position IS RI THEN wheelOrientation IS PB;
		
		RULE 6  : IF orientation IS RU AND position IS LE THEN wheelOrientation IS NS;
		RULE 7  : IF orientation IS RU AND position IS LC THEN wheelOrientation IS PS;
		RULE 8  : IF orientation IS RU AND position IS CE THEN wheelOrientation IS PM;
		RULE 9  : IF orientation IS RU AND position IS RC THEN wheelOrientation IS PB;
		RULE 10 : IF orientation IS RU AND position IS RI THEN wheelOrientation IS PB;
		
		RULE 11 : IF orientation IS RV AND position IS LE THEN wheelOrientation IS NM;
		RULE 12 : IF orientation IS RV AND position IS LC THEN wheelOrientation IS NS;
		RULE 13 : IF orientation IS RV AND position IS CE THEN wheelOrientation IS PS;
		RULE 14 : IF orientation IS RV AND position IS RC THEN wheelOrientation IS PM;
		RULE 15 : IF orientation IS RV AND position IS RI THEN wheelOrientation IS PB;
		
		RULE 16 : IF orientation IS VE AND position IS LE THEN wheelOrientation IS NM;
		RULE 17 : IF orientation IS VE AND position IS LC THEN wheelOrientation IS NM;
		RULE 18 : IF orientation IS VE AND position IS CE THEN wheelOrientation IS ZE;
		RULE 19 : IF orientation IS VE AND position IS RC THEN wheelOrientation IS PM;
		RULE 20 : IF orientation IS VE AND position IS RI THEN wheelOrientation IS PM;
		
		RULE 21 : IF orientation IS LV AND position IS LE THEN wheelOrientation IS NB;
		RULE 22 : IF orientation IS LV AND position IS LC THEN wheelOrientation IS NM;
		RULE 23 : IF orientation IS LV AND position IS CE THEN wheelOrientation IS NS;
		RULE 24 : IF orientation IS LV AND position IS RC THEN wheelOrientation IS PS;
		RULE 25 : IF orientation IS LV AND position IS RI THEN wheelOrientation IS PM;
		
		RULE 26 : IF orientation IS LU AND position IS LE THEN wheelOrientation IS NB;
		RULE 27 : IF orientation IS LU AND position IS LC THEN wheelOrientation IS NB;
		RULE 28 : IF orientation IS LU AND position IS CE THEN wheelOrientation IS NM;
		RULE 29 : IF orientation IS LU AND position IS RC THEN wheelOrientation IS NS;
		RULE 30 : IF orientation IS LU AND position IS RI THEN wheelOrientation IS PS;
		
		RULE 31 : IF orientation IS LB AND position IS LE THEN wheelOrientation IS NB;
		RULE 32 : IF orientation IS LB AND position IS LC THEN wheelOrientation IS NB;
		RULE 33 : IF orientation IS LB AND position IS CE THEN wheelOrientation IS NM;
		RULE 34 : IF orientation IS LB AND position IS RC THEN wheelOrientation IS NM;
		RULE 35 : IF orientation IS LB AND position IS RI THEN wheelOrientation IS NS;		
		
	END_RULEBLOCK

END_FUNCTION_BLOCK